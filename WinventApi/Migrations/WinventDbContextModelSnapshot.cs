// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Winvent.Infrastructure.Data;

#nullable disable

namespace WinventApi.Migrations
{
    [DbContext(typeof(WinventDbContext))]
    partial class WinventDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Winvent.Domain.Models.Admin", b =>
                {
                    b.Property<Guid>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminFirstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminLastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUsername")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Expense", b =>
                {
                    b.Property<Guid>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ExpenseAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("ExpenseCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseDoneAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseDoneBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.HasKey("ExpenseId");

                    b.HasIndex("OfficerId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Offering", b =>
                {
                    b.Property<Guid>("OfferingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("OfferingAmount")
                        .HasColumnType("float");

                    b.Property<string>("OfferingCollectedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferingCollectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OfferingcreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.HasKey("OfferingId");

                    b.HasIndex("OfficerId");

                    b.ToTable("Offerings");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Officer", b =>
                {
                    b.Property<Guid>("OficcerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OfficerCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficerFirstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OfficerIsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("OfficerLastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficerPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficerUsername")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OficcerId");

                    b.ToTable("Officers");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Tithe", b =>
                {
                    b.Property<Guid>("TitheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.Property<double>("TitheAmount")
                        .HasColumnType("float");

                    b.Property<string>("TitheCollectedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitheCollectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TitheCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitheGivenBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitheName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitheId");

                    b.HasIndex("OfficerId");

                    b.ToTable("Tithes");
                });

            modelBuilder.Entity("Winvent.Domain.Models.TransportSeed", b =>
                {
                    b.Property<Guid>("TransportSeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.Property<double>("TransportSeedAmount")
                        .HasColumnType("float");

                    b.Property<string>("TransportSeedCollectedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransportSeedCollectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransportSeedCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransportSeedGivenBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransportSeedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransportSeedId");

                    b.HasIndex("OfficerId");

                    b.ToTable("TransportSeeds");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Expense", b =>
                {
                    b.HasOne("Winvent.Domain.Models.Officer", "officer")
                        .WithMany()
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("officer");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Offering", b =>
                {
                    b.HasOne("Winvent.Domain.Models.Officer", "Officer")
                        .WithMany()
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Officer");
                });

            modelBuilder.Entity("Winvent.Domain.Models.Tithe", b =>
                {
                    b.HasOne("Winvent.Domain.Models.Officer", "officer")
                        .WithMany()
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("officer");
                });

            modelBuilder.Entity("Winvent.Domain.Models.TransportSeed", b =>
                {
                    b.HasOne("Winvent.Domain.Models.Officer", "officer")
                        .WithMany()
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("officer");
                });
#pragma warning restore 612, 618
        }
    }
}
